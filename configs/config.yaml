server:
  name: go-backoffice
  port: 8080
  secure: false
  key: "configs/key.pem"
  cert: "configs/cert.pem"
allow:
  origins: http://localhost:3000
  credentials: true
  methods: GET,PUT,POST,DELETE,OPTIONS,PATCH
  headers: Access-Control-Allow-Headers,Authorization,Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers
security_skip: true
template: true

log:
  level: info
  duration: duration
  fields: app,service,userId,username
  goroutines: true

middleware:
  log: true
  skips: /health,/authenticate
  request: request
  response: response
  masks: userId,username
  constants:
    app: "backoffice"
    service: back-office
  map:
    userId: userId
    username: username

ldap:
  tls: true
  insecure_skip_verify: true
  server: fake-ldap-server:389
  base_dn: dc=example,dc=com
  display_name: displayName
  users: test01,test02,kaka,zinedine.zidane,gareth.bale
  timeout: 3000
auth:
  token:
    secret: secretbackoffice
    expires: 86400000
  status:
    timeout: -1
    not_found: 0
    fail: 0
    success: 1
    disabled: 2
    error: 4
  payload:
    ip: ip
    id: userId
    username: username
    email: email
    user_type: roleId
  user_status:
    disable: I
  query: select userId as id, username, email, displayName as displayname, status from users where username = ?

db:
  driver: postgres
  data_source_name: host=localhost port=5432 user=postgres dbname=backoffice sslmode=disable password=postgres


key_file: file
allowed_extensions: ''  # '(?i)\.(jpg|jpeg|png|gif)$' - if '' allow all extension
provider: google_storage
google_storage:
  bucket: go-firestore-rest-api.appspot.com
  directory: sub
  public: true
google_credentials: '
  {
    "type": "service_account",
    "project_id": "go-firestore-rest-api",
    "private_key_id": "0227f21f734620a0a04a3882249f3b1cb1ab634a",
    "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCrzi/hC6NsGZyR\nc2rurmpACAn5FggHjrUshXCqbsoQUPvrMhTEPQk56hQdHNlMl+ZNue94Cv7D3LCR\nlHu68XOsPAhnx21LHPsMplIobjnXWn+fD+Ow6zvHp9RalS40PrVYS1uuIVYjeets\n8dtdFB3G9ka7Zv8oz4WBN4S18sXsV702OaBMo2IwfArTk2DCY6KYqcNEVde0sd/q\nH6pK1GvDPkgbtcklk5fUgkNz61nufnqYujsnx57GuDT9ZbreAcYTB5/hRcgMjyM6\n8tgYXdjmJLFdTsMABT/YsQ0OmDDwhVQrc0CixZtzMXg+jLRxKZuHELQ+nkJCKJBi\nTtQJ1f+dAgMBAAECggEACdL2+uvi8uX+BXUvmqlfivzKsTMYz3HSG1MgD6bZKBix\nZxAMjvIcinK/prCFHnObKDunHVqnmcSPVivC7XwsDJ+8LU8CiWaFVoJWNVikNxPG\nM27BqtawquiGZI2eQD+LuBpLCkh+t/WbSDYGQKrLTxq7DbFEiu1e6XYmwQ66UZrU\ny1U7YuRw2ML+6BiHaSdq3FH3wvBbsAfwZoNnqdqTjaj01EkNsi/lOmFXHY8gPOA1\nGRI20R4KhRkctIC4ZztXg50bRzuIkz+YX57F36kEqpLaXePUQ/pHWg+76rsCd2dD\nIrcQF8Y+Hbp4eP+7CBu3AUltOzuNeC6h69B8MKCrowKBgQDTCrzCD0SThL+6NcPR\njzwFydDbapfgzGYvleEOEUTy2akAdydrcAHlMDcuUZv7xyjam5CVS/B4vLRynl6J\n8KHkdAuU8ZLESdnfo2X9GgJWBw/RK6spebEcslWINVJWwWWsQrtjMr58WVS4hWAE\nxBIKumhf5/EICZW+BueT3j0WtwKBgQDQZ6tFc3OGE0YFVIQkalQd751dsgtjQhVZ\n4huwzaUZdtFlNJm1B6yVn9ksGAM2q0iCxDQBPOM7AF+nEpeBz+pMmdpWiOb6sKC6\nVoqIgts7lNMp2h4kJLUePgWVarbuACS1VX3qSpqdcklaAi+5WnObzC8bsmaLbZxp\nmpk4gvpoSwKBgEjoj7d3MNjJ5ra89k6CblkNlNMIqzmlQ7Qy0lJa0vgXDBS2FW8/\nfdgg5R9iYEIGVu3XCocZehUsFCb44W5ELJnRIWMuZebcIKHrQEPFZYM041j+/h3R\nBcgFMBljWnPQUoDFeRlXIYmyDtvEcByVZCpCpeZkKdf9/7ZrijuCbpZXAoGARY4k\nEoTqzJfIKeVASSsXsfoUCn5u4IzgtWQKm+K2tJ38WwvINSw/hJyaDeZhxDA8fjBf\nrv4UVM/WHNvOpyuuZix/O5xrgsXKjwZtLAyIgQU1yOUcZDHAJTzL/kdkkGCJ39+N\nq9GEcwH+y0SpivJOXXQzUMolAWnu5ywK8Vp9mqsCgYBaCkZuQ3xMkWPSYWwJ2mpq\nBrH0Zpk3ddDGo63w97C9z7zX6tIP1uxVvKVGA3LQPaj8Zvbuks8DYWV8a/6RGIP/\nTH5On0uX/VNkI1Wk9R3tstyzz7MRaBAHQOt26/le/XOptcJXWB29uKEJPpq/sfHb\nx66rIAZO4BgLcslDTj3Y2g==\n-----END PRIVATE KEY-----\n",
    "client_email": "go-firestore-rest-api@appspot.gserviceaccount.com",
    "client_id": "106958727954036268529",
    "auth_uri": "https://accounts.google.com/o/oauth2/auth",
    "token_uri": "https://oauth2.googleapis.com/token",
    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
    "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/go-firestore-rest-api%40appspot.gserviceaccount.com"
  }'

tracking:
  user: userId
  created_by: CreatedBy
  created_at: CreatedAt
  updated_by: UpdatedBy
  updated_at: UpdatedAt

code:
  handler:
    master: true
  loader:
    master: master
    id: code
    name: name
    sequence: sequence
    status: status
    active: A
role:
  handler:
    master: false
    id: roleId
    name: roleName
  loader:
    id: roleId
    name: roleName
    sequence: roleName
    status: status
    active: A

auto_role_id: false
auto_user_id: false
auto_entity_id: false

writer:
  status:
    success: 1
    version_error: 2
    error: 4
  action:
    load: load
    create: create
    update: update
    patch: patch
    delete: delete
audit_log:
  log: true
  db:
    driver: postgres
    data_source_name: postgres://hmacybye:gejWxp96CNZ41TjMPVqqAGZsrrhu7nRp@satao.db.elephantsql.com/hmacybye
  schema:
    id: id
    user: userid
    ip: ip
    resource: resourcetype
    action: action
    timestamp: timestamp
    status: status
    desc: remark
  config:
    user: userId
    ip: ip
    true: success
    false: fail
    goroutines: true
